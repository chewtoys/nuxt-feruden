{"items":[{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"4b1S539HnGq4sWqQOO8Yee","type":"Entry","createdAt":"2018-06-19T09:05:22.943Z","updatedAt":"2018-07-24T08:48:56.702Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[크로스 브라우징] IE9에서 자동으로 이미지 높이값을 default size로 계산하는 경우","slug":"ie9-default-size","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"69UURAXw5ioikyCmIEy4gq","type":"Asset","createdAt":"2018-06-19T09:05:08.962Z","updatedAt":"2018-06-19T09:05:08.962Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"locale":"en-US"},"fields":{"title":"css3","file":{"url":"//images.ctfassets.net/hu4faubeotg0/69UURAXw5ioikyCmIEy4gq/c16d77d66239180dbb377dacfef301db/css3.jpg","details":{"size":32877,"image":{"width":1400,"height":802}},"fileName":"css3.jpg","contentType":"image/jpeg"}}},"description":"[크로스 브라우징] IE9에서 자동으로 이미지 높이값을 default size로 계산하는 경우","body":"IE에서 height auto를 정의해주지 않으면, 기본적으로 이미지의 고유 높이값을 자동삽입한다.","publishDate":"2018-06-19T00:00+09:00","tags":["css3","frontend"],"categories":["css3"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"2ixWZ6UUkYCMyss0qKmmqk","type":"Entry","createdAt":"2018-05-27T08:19:43.026Z","updatedAt":"2018-07-24T08:50:50.414Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"년도를 세기로 변환하기","slug":"year-to-century","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"The first century spans from the year 1 up to and including the year 100, The second - from the year 101 up to and including the year 200, etc.","body":"## Introduction\nThe first century spans from the year 1 up to and including the year 100, The second - from the year 101 up to and including the year 200, etc.\n\n## Task :\nGiven a year, return the century it is in.\n\n## Input , Output Examples ::\n\n```\ncenturyFromYear(1705)  returns (18)\ncenturyFromYear(1900)  returns (19)\ncenturyFromYear(1601)  returns (17)\ncenturyFromYear(2000)  returns (20)\n```\n\n## my answer\n```\nfunction century(year) {\n  return Math.ceil(year / 100) > 0 ? Math.ceil(year / 100) : 1;\n}\n```\n\n## Best Practices\n```\nconst century = year => Math.ceil(year/100)\n```","publishDate":"2018-05-27T17:19+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"1sjlz9xuLqQQCMAYQM2ikc","type":"Entry","createdAt":"2018-06-03T13:56:07.614Z","updatedAt":"2018-07-24T08:49:33.570Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[codewars] Stop gninnipS My sdroW!","slug":"codewars-stop-gninnips-my-sdrow","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"Write a function that takes in a string of one or more words, and returns the same string, but with all five or more letter words reversed (Just like the name of this Kata). Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.","body":"Write a function that takes in a string of one or more words, and returns the same string, but with all five or more letter words reversed (Just like the name of this Kata). Strings passed in will consist of only letters and spaces. Spaces will be included only when more than one word is present.\n\n\n###Examples:\n\nspinWords( \"Hey fellow warriors\" ) => returns \"Hey wollef sroirraw\" \nspinWords( \"This is a test\") => returns \"This is a test\" \nspinWords( \"This is another test\" )=> returns \"This is rehtona test\"\n\n###My Answer & Best Practice\n```\nconst spinWords = (words) => {\n  return words.split(' ').map(word => (word.length > 4) ? word.split('').reverse().join('') : word).join(' ');\n}\n```","publishDate":"2018-06-03T10:55+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"stfbhI8fDMOcGoucEQMY0","type":"Entry","createdAt":"2018-07-15T06:49:15.971Z","updatedAt":"2018-07-24T08:48:07.056Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":7,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"Nuxt.js x Contentful x Netlify로 static blog 개발하기 1강","slug":"nuxt-js-x-contentful-x-netlify-static-blog-1","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"n7KuY2Fl7wcwW0E0eQoCe","type":"Asset","createdAt":"2018-07-15T04:08:42.256Z","updatedAt":"2018-07-15T06:35:37.006Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"nuxt-background","file":{"url":"//images.ctfassets.net/hu4faubeotg0/n7KuY2Fl7wcwW0E0eQoCe/de299f9e8aa46099b568aa08cd90ef03/nuxt-img.png","details":{"size":181398,"image":{"width":1600,"height":900}},"fileName":"nuxt-img.png","contentType":"image/png"}}},"description":"Nuxt.js, Contentful, Netlify로 static blog를 개발해보는 강의입니다. \nnuxt.js는 기존의 vue 웹 애플리케이션에서 ssr을 다루는 프레임워크입니다.\nContentful은 컨텐츠 관리를 도와주는 CMS 툴입니다.\nnetlify란 애플리케이션을 배포하고 자동화하기 위한 플랫폼입니다.\n\n위 도구들을 활용해서 매우 빠르고, 관리하기 쉬운 블로그 웹 애플리케이션을 개발해보겠습니다.","body":"해당 포스팅은 해당 지식 (nuxt.js, contentful, netlify)이 없어도 쉽게 정적 블로그 사이트를 개발하는데 문제가 없게 작성할 예정입니다. 그래도 기본적으로 html5, css3, javascript의 지식을 가지고 있으면 훨씬 이해하기 쉬울 겁니다. 패키지 매니저에 대한 기본적인 지식은 가지고 있다는 가정하에 포스팅을 진행해 나갈 것 입니다.\n\n## [Nuxt.js?](https://ko.nuxtjs.org/)\nnuxt.js는 일반적인 Vue Application을 개발하는 프레임워크입니다.\n기존의 Vue Application에서 좀 더 쉽게 SSR을 적용할 수 있게 도와주는 프레임워크라고 보시면 됩니다. \n__(Server Side Rendering - SSR의 장단점은 구글링하시면, 쉽게 정보를 찾아볼 수 있습니다.)__\n\n## [Contentful?](https://www.contentful.com/)\ncontentful은 컨텐츠 관리를 위한 CMS 도구입니다. 에디터에서 마크다운 파일을 직접 작성하고, 수정하고 배포하는 과정은 생각보다 불편하고 관리하기도 힘듭니다. contentful은 이 부분을 간편하고 쉽게 관리하도록 도와줍니다.\n\n## [Netlify?](https://www.netlify.com/)\nNeylify는 배포 자동화 기능을 갖춘 호스팅 서비스입니다. Heroku, GitPage와 비슷한 서비스라고 할 수 있습니다만 Heroku는 서버을 올려서 호스팅하는 반면, Netlify는 프론트엔드 단의 코드만을 호스팅해서 사용한다는 점에서 조금 다른 부분이 있습니다.\n\n### Nuxt 초기세팅\nvue cli가 설치되지 않았다면,\n```\nnpm install -g vue-cli\n\nor\n\nyarn --global add vue-cli\n```\n\n위 명령어로 vue-cli를 설치합니다.\n\nvue-cli가 설치 되었다면,\n\n```\nvue init nuxt-community/starter-template <project-name>\n```\n\nNuxt.js 팀에서 제공하는 nuxt starter를 설치합니다. project-name에는 진행할 프로젝트 이름을 적으시면 됩니다. 설치가 진행되면서 프로젝트 세부설정하는 옵션이 나오는데 모두 엔터로 넘어가주시면 됩니다.\n\n아래와 같은 명령어가 나온다면, 정상적으로 설치가 완료된 것입니다. 아래 명령어를 따라서 진행해주세요.\n\n```\n cd nuxt-blog-project\n npm install # Or yarn\n npm run dev\n```\n\n![screencapture-localhost-3000-2018-07-15-19 05 54](//images.ctfassets.net/hu4faubeotg0/2INK57IBVYsCYyUSAYuqAw/2cbb8a419d04ca9bd03e46a0c3fdd0fc/screencapture-localhost-3000-2018-07-15-19_05_54.png)\n\n위 화면을 보게 되시면, Nuxt 프로젝트를 정상적으로 설치된 것입니다. \n위 화면을 보셨다면, 축하드립니다. 벌써 반 이상 끝났네요.\n\n### [Contentful 가입하기](https://be.contentful.com/login)\n[https://be.contentful.com/login](https://be.contentful.com/login) 링크를 클릭하면 회원가입할 수 있는 아래와 같은 창을 볼 수 있습니다.\n\n![screencapture-be-contentful-login-2018-07-15-19 11 14](//images.ctfassets.net/hu4faubeotg0/6ZD6hgKqZOsU8iw2oUkIe8/85b2138efaf7b579c36e52335cb3f04c/screencapture-be-contentful-login-2018-07-15-19_11_14.png)\n\n원하시는 플랫폼으로 회원가입을 해주시면 됩니다.\n\n![screencapture-app-contentful-spaces-imhucvq8ukeo-home-2018-07-15-19 22 41](//images.ctfassets.net/hu4faubeotg0/2H1fGSjQZOos2gWCakOkUk/0b454b2889e7cafc79ee128f03bf8a37/screencapture-app-contentful-spaces-imhucvq8ukeo-home-2018-07-15-19_22_41.png)\n\n회원가입을 완료하셨다면, create space 버튼을 누르시고, 원하는 space name을 작성해서 생성합니다.\n\n![screencapture-app-contentful-spaces-mzh523grqjbp-content types-2018-07-15-19 23 41](//images.ctfassets.net/hu4faubeotg0/6ZEou1wZMs0i0Sicku4kSa/cd8456a38bd100155deae2937bb839fd/screencapture-app-contentful-spaces-mzh523grqjbp-content_types-2018-07-15-19_23_41.png)\n\nSpace를 생성하면 Content Model을 설정할 수 있는 탭이 있는데, 이 탭을 들어가서 content type을 설정하도록 하겠습니다.\n\n![screencapture-app-contentful-spaces-mzh523grqjbp-content types new-fields-2018-07-15-19 24 04](//images.ctfassets.net/hu4faubeotg0/4smQgQa7Lyo8Oqies26Y8c/95bf8bf0ef7d8da22db28d92c1f253af/screencapture-app-contentful-spaces-mzh523grqjbp-content_types_new-fields-2018-07-15-19_24_04.png)\n\n우선 Content type Post를 생성합니다.\n\n![screencapture-app-contentful-spaces-mzh523grqjbp-content types new-fields-2018-07-15-19 24 30](//images.ctfassets.net/hu4faubeotg0/4xJ8VgUpBSysGomEy2SYM8/6fcfa651bb48b131fd8e685f0f5a464a/screencapture-app-contentful-spaces-mzh523grqjbp-content_types_new-fields-2018-07-15-19_24_30.png)\n\n그 다음 content type 안에 필요한 필드들을 정의할 수 있는데, 강의에서는 title, slug, content 정도만 세팅하도록 하겠습니다.\n\ntitle - text필드 선택, required\nslug - text 필드 선택, required\ncontent - text 필드 선택, required\n\n타입을 정의하고 저장하면 선언한 필드에 해당하는 post를 생성할 수 있습니다.\n\n![screencapture-app-contentful-spaces-mzh523grqjbp-entries-pvJBZ7NjZAw04Aqecuscm-2018-07-15-19 27 02](//images.ctfassets.net/hu4faubeotg0/5WAury2cy4a28wo2EoWqEg/8dd20f9187a26c929778024793ed786a/screencapture-app-contentful-spaces-mzh523grqjbp-entries-pvJBZ7NjZAw04Aqecuscm-2018-07-15-19_27_02.png)\n\n필드 값에 맞게 글을 작성하고, 우측 상단에 publish 버튼을 누르면 성공적으로 발행하게 됩니다.\n\n![screencapture-app-contentful-spaces-mzh523grqjbp-entries-2018-07-15-19 28 09](//images.ctfassets.net/hu4faubeotg0/495LO0VapWay6wq0QqyGuo/b84ca51e3025465d1b196c2660ea1419/screencapture-app-contentful-spaces-mzh523grqjbp-entries-2018-07-15-19_28_09.png)\n\n작성한 글은 Content탭에서 확인할 수 있습니다. 성공적으로 글이 발행되었네요.\n\n이번 강좌에서는 간단하게 Nuxt, Contentful, Netlify가 무엇인지, Nuxt 설치 그리고 Contentful에 가입하고, content type을 선언하고 글을 발행하는 것까지 진행했습니다.\n\n다음 포스팅에서는 Contentful API를 Nuxt에 연결해서 Nuxt 프로젝트에 Contentful에서 발행한 글을 불러오는 법을 알려드리도록 하겠습니다.","publishDate":"2018-07-15T15:49+09:00","tags":["javascript","vue","frontend"],"categories":["vue"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"nKE45qJonQmkiSuYG42Cu","type":"Entry","createdAt":"2018-07-15T04:25:01.357Z","updatedAt":"2018-07-24T08:47:50.107Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":4,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[nuxt] Markdown-It에 Highlight.js 적용하는 법","slug":"nuxt-markdown-it-highlight-js","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"n7KuY2Fl7wcwW0E0eQoCe","type":"Asset","createdAt":"2018-07-15T04:08:42.256Z","updatedAt":"2018-07-15T06:35:37.006Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"nuxt-background","file":{"url":"//images.ctfassets.net/hu4faubeotg0/n7KuY2Fl7wcwW0E0eQoCe/de299f9e8aa46099b568aa08cd90ef03/nuxt-img.png","details":{"size":181398,"image":{"width":1600,"height":900}},"fileName":"nuxt-img.png","contentType":"image/png"}}},"description":"nuxt 프로젝트에서 markdown-it에 highlight.js를 적용해보자.","body":"Nuxt를 사용하여 블로그와 같은 콘텐츠를 제공하기 위해 정적으로 생성된 웹사이트를 만드는 경우 마크다운 문법을 처리해야할 경우가 생깁니다. 저같은 경우 마크다운 문법과 같은 경우 Markdown-it을 통해 처리하고 있습니다. 하지만 Markdown-it 만으로 처리하기에는 부족한 감이 있습니다. (code syntax highlighting과 같은 경우 지원하지 않음)\n\n그래서 Markdown-it에 추가적으로 적용할 패키지가 highlight.js입니다.\n\n- Markdown-it은 마크다운 문법을 처리하기 위한 패키지\n- highlight.js는 syntax highlighting을 처리하기 위한 패키지\n\n\n### 1. Install the Packages\n```\nyarn add @nuxtjs/markdownit\nyarn add markdown-it-highlightjs\n```\nor\n```\nnpm i --save @nuxtjs/markdownit\nnpm i --save markdown-it-highlightjs\n```\n\n### 2. nuxt.config.js의 modules속성에 markdownit 추가\n```\nmodule.exports = {\n  modules: [\n    '@nuxtjs/markdownit'\n  ],\n}\n```\n### 3. nuxt.config.js에 markdownit config 추가\nmarkdown-it 모듈 설정을 적용할 때, 앞서 우리가 설치한 highlight.js 패키지를 적용시킵니다.\n```\nmodule.exports = {\n  modules: [\n    '@nuxtjs/markdownit'\n  ],\n  markdownit: {\n    injected: true,\n    use: [\n      'markdown-it-highlightjs'\n    ]\n  }\n}\n```\n\n### 4. 원하는 테마를 사용하기 위한 CSS import\n마지막으로 __~/node_modules/highlight.js/styles__ 폴더에 원하는 테마의 스타일을 직접 가져옵니다.\n```\nmodule.exports = {\n  css: [\n    { src: '~/node_modules/highlight.js/styles/atom-one-dark.css', lang: 'css' }\n  ],\n  modules: [\n    '@nuxtjs/markdownit'\n  ],\n  markdownit: {\n    injected: true,\n    use: [\n      'markdown-it-highlightjs'\n    ]\n  }\n}\n```\n\n\n","publishDate":"2018-07-15T00:00+09:00","tags":["javascript","vue","frontend"],"categories":["vue"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"5DRHbAh4DC46WIEQ04Wea4","type":"Entry","createdAt":"2018-07-25T14:59:03.837Z","updatedAt":"2018-07-25T14:59:03.837Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트로 지그재그 숫자 출력 구현 (print zigzag number in javascript)","slug":"print-zigzag-number-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"1~25 사이의 숫자를 지그재그로 화면에 출력하는 알고리즘입니다.","body":"1~25 사이의 숫자를 지그재그로 화면에 출력하는 알고리즘을 자바스크립트로 구현해보겠습니다.\n\n## 실행결과 예시\n```\n1 2 3 4 5\n10 9 8 7 6\n11 12 13 14 15\n20 19 18 17 16\n21 22 23 24 25\n```\n\n## 구현 방법\n1. 전체 총 몇 행을 출력하는지를 결정하는 for문\n2. 출력할 행이 홀수일 경우\n3. 출력할 행이 짝수일 경우\n\n## 자바스크립트로 구현\n```\n/**\n * 1부터 25사이의 값을 지그재그로 출력하는 함수\n */\nfunction printZigZag() {\n  const maxLine = 5;\n  let minNumber = 0;\n  // 총 5개의 행을 출력하는 for문\n  for (let i = 1; i <= maxLine; i++) {\n    let data = [];\n    for (let j = 1; j <= 5; j++) {\n      minNumber += 1;\n      data.push(minNumber);\n    }\n    \n    // 짝수일 경우 배열을 reverse시킨다.\n    if (i % 2 === 0) {\n      data.reverse();\n    }\n\n    console.log(data.toString());\n  }\n}\n\nprintZigZag();\n```","publishDate":"2018-07-25T23:59+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"2hFk9yrhlOGKoamOSaAogk","type":"Entry","createdAt":"2018-07-23T14:52:09.318Z","updatedAt":"2018-07-24T08:46:50.061Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트로 구현한 버블정렬 알고리즘 (bubble sort in javascript)","slug":"bubble-sort-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"버블 정렬 알고리즘(Bubble Sort Algorithm)은 가장 기본적인 정렬 알고리즘 중 하나다. 빈번하게 등장하는 알고리즘이지만, 성능이 그리 좋은 편이 아니므로 실제로는 잘 사용하지 않는다.","body":"## 버블 정렬 알고리즘이란?\n버블 정렬 알고리즘은 정렬하는 형태가 버블과 비슷하다고 해서 붙여진 이름이다. 내부 구조를 살펴보면 순차적으로 바로 옆에 있는 데이터와 비교해서 옆의 데이터가 더 크면 자신과 위치를 교환한다. 즉, 첫 번째 데이터가 가장 크다면 계속 옆에 있는 데이터와 자리를 교환하며 해당 데이터는 맨 끝으로 이동하게 된다.이러한 형태가 마치 버블이 보글보글 올라가는 것과 비슷해 보여서 버블 정렬이라고 부른다.\n\n## 성능\n버블 정렬 알고리즘은 빅오 표기법으로 표시하면 O(N2)의 시간복잡도를 가지고 있다.\n\n## 자바스크립트로 구현\n\n```\nfunction bubbleSort(arr) {\n\tlet result = [...arr]; // 원본 데이터 복사\n  \n    for (let i = 0; i < result.length - 1; i++) {\n        for (let j = 0; j < result.length - i; j++) {\n            if (result[j] > result[j + 1]) {\n                let temp = result[j];\n                result[j] = result[j+1];\n                result[j+1] = temp;\n            }\n        }\n    }\n    \n    return result;\n}\n\nlet items = [8,4,9,2,5,10,15,22,88,63,18];\nbubbleSort(items); // [2, 4, 5, 8, 9, 10, 15, 18, 22, 63, 88]\n```","publishDate":"2018-07-23T23:39+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"7yuyCA8spyQ6Q2UO2gSQ0w","type":"Entry","createdAt":"2018-05-29T04:05:42.939Z","updatedAt":"2018-07-24T08:51:00.771Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[codewars] String Reordering","slug":"codewars-string-reordering","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"codewars kata","body":"The input will be an array of dictionaries.\n\nReturn the values as a string-seperated sentence in the order of their keys' integer equivalent (increasing order).\n\nThe keys are not reoccurring and their range is -999 < key < 999. The dictionaries' keys & values will always be strings and will always not be empty.\n\nExample\n```\nInput:\nList = [\n        {'4': 'dog' }, {'2': 'took'}, {'3': 'his'},\n        {'-2': 'Vatsan'}, {'5': 'for'}, {'6': 'a'}, {'12': 'spin'}\n       ]\n\nOutput:\n'Vatsan took his dog for a spin'\n```\n\nMy Answer\n```\nfunction sentence(List) {\n  return List.sort((curr, next) => Object.keys(curr)[0] - Object.keys(next)[0]).map(item => item[Object.keys(item)[0]]).join(' ');\n}\n```","publishDate":"2018-05-29T13:00+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"1eviDN9gCA0gkkc0ckKOai","type":"Entry","createdAt":"2018-05-26T04:32:38.401Z","updatedAt":"2018-07-24T08:51:51.015Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":7,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"DTD(Document Type Definition) - 문서 형식 정의","slug":"dtd-document-type-definition","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"4SRJK3JXBCsWWAC44I084O","type":"Asset","createdAt":"2018-05-26T04:31:56.317Z","updatedAt":"2018-07-15T08:12:03.279Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"html5","file":{"url":"//images.ctfassets.net/hu4faubeotg0/4SRJK3JXBCsWWAC44I084O/17eee005ac20bfccde544d24700f3343/wallpaperjam.com-91463.jpg","details":{"size":355719,"image":{"width":2048,"height":1200}},"fileName":"wallpaperjam.com-91463.jpg","contentType":"image/jpeg"}}},"description":"DTD(Document Type Definition) - 문서 형식 정의","body":"\n- doctype이 무엇을 하는지\n- 표준모드(standard mode)와 관용모드(quirks mode)의 차이\n\n두 가지를 정의해보고자 한다.\n\n\n# DTD란?\n- 문서 형식 정의(DTD: Document Type Definition)는 마크업 문서의 요소와 속성등을 해석하는 기준을 명시하는 것이다.\n- 문서 형식에는 HTML5, XHTML, HTML 3가지 유형이 존재한다.\n- 이전 버전의 HTML(HTML2 ~ HTML4)은 SGML에 기반을 두어 만들어졌기 때문에 상세한 DTD 참조가 필요하며, 이 때문에 DOCTYPE을 선언하려면 공개 식별자와 시스템 식별자가 포함된 긴 문자열을 작성해야 한다.\n- HTMl 4.01 Strict 모드로 문서 형식을 정의할 경우\n```\n<!DOCTYPE html PUBLIC \"-//W3C//DTD HTML 4.01//EN\" \"http://www.w3.org/TR/html4/strict.dtd\">\n```\n\n# DTD를 정의하지 않으면, 관용모드(quirks mode)로 렌더링된다.\n- DOCTYPE 선언이 존재하지 않거나 잘못 작성할 경우, 웹 브라우저는 웹문서를 관용모드로 읽는다.\n- 관용모드란 IE6 이전의 오래된 브라우저에 대응된 웹사이트의 하위 호환성을 지원하기 위해 웹 브라우저가 웹문서를 해석하는 방식이다.\n- 표준모드(standard mode)는 W3C나 IETF의 표준을 엄격히 준수하여 문서를 해석한다.\n- 관용모드는 같은 코드라도 브라우저마다 서로 다르게 해석하므로 다른 결과를 보여줄 수 있다.\n\n# 표준모드와 관용모드의 대표적인 차이\n- IE 박스모델 버그\n  - 관용모드: width 계산할 때, padding과 border를 포함한다.\n  - 표준모드: width 계산할 때, padding과 border를 포함하지 않는다.\n\n- 인라인 요소의 수직정렬\n  - 관용모드: box의 border bottom에 맞추어 이미지를 정렬한다.\n  - 표준모드: baseline에 맞추어 정렬한다.\n\n- 테이블 안에 font-size 상속\n  - 관용모드: 테이블 안에서 텍스트는 기본 폰트사이즈를 상속하지 않는다.\n  - 표준모드: 테이블 안에서 텍스트는 기본 폰트사이즈를 상속받는다.","publishDate":"2018-05-26T00:00+09:00","tags":["html","frontend"],"categories":["html5"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"2SOxWz8Uo8aMSY4UkgMgcy","type":"Entry","createdAt":"2018-05-26T04:42:18.776Z","updatedAt":"2018-07-24T08:51:29.516Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":7,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[codewars] 배열의 평균값 구하기","slug":"1","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"배열의 평균값 구하기","body":"## summary\nIt's the academic year's end, fateful moment of your school report. The averages must be calculated. All the students come to you and entreat you to calculate their average for them. Easy ! You just need to write a script.\n\nReturn the average of the given array rounded down to its nearest integer.\n\nThe array will never be empty.\n\n```\nfunction getAverage(marks){\n  return Math.floor(marks.reduce((prev, curr) => prev + curr) / marks.length);\n}\n```\n","publishDate":"2018-05-24T00:00+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"31WsnpaT1moMMUisoKeyIs","type":"Entry","createdAt":"2018-06-02T15:18:03.223Z","updatedAt":"2018-07-24T08:50:05.429Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[codewars] Decode the Morse code","slug":"codewars-decode-the-morse-code","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"In this kata you have to write a simple Morse code decoder. While the Morse code is now mostly superceded by voice and digital data communication channels, it still has its use in some applications around the world.","body":"In this kata you have to write a simple Morse code decoder. While the Morse code is now mostly superceded by voice and digital data communication channels, it still has its use in some applications around the world.\nThe Morse code encodes every character as a sequence of \"dots\" and \"dashes\". For example, the letter A is coded as ·−, letter Q is coded as −−·−, and digit 1 is coded as ·−−−. The Morse code is case-insensitive, traditionally capital letters are used. When the message is written in Morse code, a single space is used to separate the character codes and 3 spaces are used to separate words. For example, the message <b>HEY JUDE</b> in Morse code is <b>···· · −·−−   ·−−− ··− −·· ·</b>.\n\n<b>NOTE</b>: Extra spaces before or after the code have no meaning and should be ignored.\n\nIn addition to letters, digits and some punctuation, there are some special service codes, the most notorious of those is the international distress signal SOS (that was first issued by Titanic), that is coded as <b>···−−−···</b>. These special codes are treated as single special characters, and usually are transmitted as separate words.\n\nYour task is to implement a function that would take the morse code as input and return a decoded human-readable string.\n\nFor example:\n\n```\ndecodeMorse('.... . -.--   .--- ..- -.. .')\n//should return \"HEY JUDE\"\n```\n\nNOTE: For coding purposes you have to use ASCII characters . and -, not Unicode characters.\n\nThe Morse code table is preloaded for you as a dictionary, feel free to use it. In CoffeeScript, C++, Go, JavaScript, PHP, Python, Ruby and TypeScript, the table can be accessed like this: MORSE_CODE['.--'], in Java it is MorseCode.get(\".--\"), in C# it is MorseCode.Get(\".--\") (returns string), in Haskell the codes are in a Map String String and can be accessed like this: morseCodes ! \".--\", in Elixir it is morse_codes variable, in Rust it is self.morse_code.\n\nAll the test strings would contain valid Morse code, so you may skip checking for errors and exceptions. In C#, tests will fail if the solution code throws an exception, please keep that in mind. This is mostly because otherwise the engine would simply ignore the tests, resulting in a \"valid\" solution.\n\nGood luck!\n\nAfter you complete this kata, you may try yourself at Decode the Morse code, advanced.\n\nMy answer\n```\ndecodeMorse = function(morseCode){\n  morseCode = morseCode.trim();\n  let refinedData = morseCode.split('   ');\n  let result = [];\n  \n  for (let i = 0; i < refinedData.length; i++) {\n    let temp = refinedData[i].split(' ');\n    for (let j = 0; j < temp.length; j++) {\n      if (MORSE_CODE[temp[j]]) {\n        result.push(MORSE_CODE[temp[j]]);\n      }\n    }\n    \n    if (i !== refinedData.length - 1) {\n    result.push(' ');\n    }\n  }\n  return result.join('');\n}\n```\n\nBest practice\n```\ndecodeMorse = function(morseCode){\n  function decodeMorseLetter(letter) {\n    return MORSE_CODE[letter];\n  }\n  function decodeMorseWord(word) {\n    return word.split(' ').map(decodeMorseLetter).join('');\n  }\n  return morseCode.trim().split('   ').map(decodeMorseWord).join(' ');\n}\n```\n\n너무 구리게 풀었다.. 더 생각좀 하고 풀어야지..ㅎㅎ","publishDate":"2018-06-02T00:00+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"4z47hCSHoIK4WMqWwGGgw4","type":"Entry","createdAt":"2018-07-22T08:21:45.250Z","updatedAt":"2018-07-24T08:47:02.094Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트 진수 변환 (convert from/to binary/decimal/hexadecimal in javascript)","slug":"convert-from-to-binary-decimal-hexadecimal-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"3SGn7CBi9aE62YIekmOyOk","type":"Asset","createdAt":"2018-05-27T14:04:57.069Z","updatedAt":"2018-05-27T14:04:57.069Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"locale":"en-US"},"fields":{"title":"javascript","description":"javascript","file":{"url":"//images.ctfassets.net/hu4faubeotg0/3SGn7CBi9aE62YIekmOyOk/9f7dc4e86d70ede94f2c88b47724dabf/javascript.png","details":{"size":11875,"image":{"width":785,"height":340}},"fileName":"javascript.png","contentType":"image/png"}}},"description":"자바스크립트로 진수 변환하는 방법은 생각보다 간단하다. 자바스크립트 빌트인 함수를 사용하면 쉽게 변환할 수 있다.","body":"자바스크립트로 진수 변환하는 방법은 생각보다 간단하다. \n자바스크립트 빌트인 메서드를 사용하면 쉽게 변환할 수 있다. 아래의 예시를 통해 학습해보자.\n\n### 10진수를 16진수로 변환\n```\nlet dec = 142;\nlet hex = dec.toString(16); // \"8e\"\n```\n\n### 10진수를 8진수로 변환\n```\nlet dec = 142;\nlet oct = dec.toString(2); // \"216\"\n```\n\n### 10진수를 2진수로 변환\n```\nlet dec = 142;\nlet bin = dec.toString(2); // \"10001110\"\n```\n\n### 2진수를 10진수로 변환\n```\nlet bin = \"10001110\";\nlet dec = parseInt(bin, 2);\n```\n\n### 8진수를 10진수로 변환\n```\nlet oct = \"216\";\nlet dec = parseInt(oct, 8);\n```\n\n### 16진수를 10진수로 변환\n```\nlet hex = \"8e\";\nlet dec = parseInt(hex, 16);\n```\n\n10진수로 변환이 아닌 다른 진수로의 변환은 (예를 들어 16진수에서 2진수) 10진수로 변환해서 타 진수로 변환하면 쉽게 변환할 수 있다.\n\n```\nlet hex = \"8e\";\nlet dec = parseInt(hex, 16);\nlet bin = dec.toString(2);\n```\n\n이렇게 자바스크립트에서 진수 변환은 toString 메서드와 parseInt 메서드를 적절하게 사용하면 쉽게 적용할 수 있다.","publishDate":"2018-07-22T17:20+09:00","tags":["javascript","algorithm"],"categories":["javascript"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"1tzCVIUvTukMAwKYmUSCYQ","type":"Entry","createdAt":"2018-05-27T14:15:52.492Z","updatedAt":"2018-07-24T08:51:10.089Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[codewars] Will you make it?","slug":"codewars-will-you-make-it","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"codewars kata","body":"You were camping with your friends far away from home, but when it's time to go back, you realize that you fuel is running out and the nearest pump is 50 miles away! You know that on average, your car runs on about 25 miles per gallon. There are 2 gallons left. Considering these factors, write a function that tells you if it is possible to get to the pump or not. Function should return true if it is possible and false if not.\n\n```\nconst zeroFuel = (distanceToPump, mpg, fuelLeft) => mpg * fuelLeft >= distanceToPump;\n```","publishDate":"2018-05-27T11:15+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"2tAJBWmptC2uqkK2qCuekE","type":"Entry","createdAt":"2018-07-23T15:12:29.175Z","updatedAt":"2018-07-24T08:44:45.177Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트로 소수 구하는 알고리즘 구현(prime number in javascript)","slug":"prime-number-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"1과 자신을 제외한 어떠한 정수로도 나누어지지 않는 수가 소수이다. 1 ~ 1000 사이의 숫자 중에 소수만을 구하는 알고리즘을 구현해보자.","body":"## 소수란?\n1과 자신을 제외한 어떠한 정수로도 나누어지지 않는 수가 소수이다. 1 ~ 1000 사이의 숫자 중에 소수만을 구하는 알고리즘을 구현해보자.\n\n## 자바스크립트로 구현\n```\nfunction getPrimeNumber() {\n  let results = [];\n  // 1과 1000사이의 숫자 중에 소수를 구하기 위한 반복문\n  for (let i = 1; i <= 1000; i++) {\n    let isPrimeNumber = true;\n    // 1과 자기 자신을 제외한 정수 중에 나눠지는 정수가 있는지 체크\n    for (let j = 2; j < i; j++) {\n      if (i % j === 0) {\n        isPrimeNumber = false;\n      }\n    }\n\n    // 소수이면 결과값에 할당\n    if (isPrimeNumber) {\n      results.push(i);\n    }\n  }\n\n  return results;\n}\n```\n\n1부터 1000 사이의 소수는 169개이다. 위 코드를 동작시켜보면 getPrimeNumber 함수는 169개의 소수를 포함한 배열을 return하고 있음을 확인할 수 있다.","publishDate":"2018-07-24T00:04+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6NfkMn671COQsekGYOsSak","type":"Entry","createdAt":"2018-07-26T15:37:16.957Z","updatedAt":"2018-07-26T15:37:16.957Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트로 피보나치 수열 구현 (fibonacci in javascript)","slug":"fibonacci-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"자바스크립트로 피보나치 수열을 구현해보자.","body":"## 피보나치 수열이란?\n0항을 0, 1항을 1로 두고, 두번 째 항부터는 바로 앞의 두 수를 더한 수로 놓는 것이 피보나치 수열이다. 아래와 같은 점화식을 가지고 있다.\n```\nF0 = 0;\nF1 = 1;\nFn+2 = Fn+1 + Fn;\n```\n\n## 자바스크립트로 구현\n임의의 숫자를 매개변수로 받아서 그 숫자만큼 피보나치 수열의 값을 나열하는 로직을 구현해보자.\n```\n// 피보나치 구현 함수\nexport function getFibonacci(num) {\n  let i = 0;\n  let value1 = 0;\n  let value2 = 1;\n  let result = [];\n  while (i < num) {\n    let newValue = value1 + value2;\n\n    result.push(newValue);\n\n    value1 = value2;\n    value2 = newValue;\n    i++;\n  }\n  return result.toString();\n}\n\nconsole.log(getFibonacci(8)); // 1,2,3,5,8,13,21,34\nconsole.log(getFibonacci(12)); // 1,2,3,5,8,13,21,34,55,89,144,233\nconsole.log(getFibonacci(15));\n// 1,2,3,5,8,13,21,34,55,89,144,233,377,610,987\nconsole.log(getFibonacci(24));\n// 1,2,3,5,8,13,21,34,55,89,144,233,377,610,987,1597,2584,4181,6765,10946,17711,28657,46368,75025\n```","publishDate":"2018-07-27T00:37+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"4ncIWV9GwEEE8SWAiE4eOE","type":"Entry","createdAt":"2018-07-26T15:14:12.178Z","updatedAt":"2018-07-26T15:14:12.178Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트로 최대공약수 구하는 알고리즘 구현 (greatest common divisor in javascript)","slug":"greatest-common-divisor-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"자바스크립트로 최대공약수를 구하는 알고리즘을 구현해보자.","body":"## 최대공약수(greatest common divisor GCD)\n최대공약수의 사전적인 의미는 공약수 중 최댓값을 의미합니다. 두 수의 공약수를 구한 후 그중에서 가장 큰 값을 최대공약수로 구하면 됩니다.\n* 약수 ? 어떠한 수나 식을 나머지 없이 나눌 수 있는 수\n* 공약수 ? 두 수의 각각의 약수 중 공통된 약수를 의미\n\n우선 약수를 구하는 로직을 작성해보겠습니다.\n\n## 자바스크립트로 약수 구현 알고리즘\n```\nexport function getDivisor(value) {\n  if (typeof value !== \"number\") {\n    return;\n  }\n  let result = [];\n\n  for (let i = 1; i <= value; i++) {\n    if (value % i === 0) {\n      result.push(i);\n    }\n  }\n\n  return result.toString();\n}\n\nconsole.log(getDivisor(30)); // 1,2,3,5,6,10,15,30\nconsole.log(getDivisor(12)); // 1,2,3,4,6,12\n```\n\n다음으로는 최대공약수를 구하는 로직을 작성해보겠습니다. 약수를 구하는 로직을 조금 수정하면 최대공약수를 구하는 로직을 구현할 수 있습니다.\n\n## 자바스크립트로 최대공약수 구현 알고리즘\n```\n// 최대공약수 구현 함수\nexport function getGCD(value1, value2) {\n  if (typeof value1 !== \"number\" || typeof value2 !== \"number\") {\n    return;\n  }\n  // value1과 value2 중 큰 값을 기준으로 값을 선택\n  let num = value1 > value2 ? value1 : value2;\n  let max;\n\n  for (let i = 1; i <= num; i++) {\n    if (value1 % i === 0 && value2 % i === 0) {\n      max = i;\n    }\n  }\n\n  return max;\n}\nconsole.log(getGCD(280, 30)); // 10\nconsole.log(getGCD(12, 4)); // 4\n```","publishDate":"2018-07-27T00:14+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"5YjeZauJaM64IK6uYQ6IKi","type":"Entry","createdAt":"2018-06-02T15:03:01.761Z","updatedAt":"2018-07-24T08:50:17.247Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[codewars] Array.diff","slug":"codewars-array-diff","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"Your goal in this kata is to implement a difference function, which subtracts one list from another and returns the result.","body":"Your goal in this kata is to implement a difference function, which subtracts one list from another and returns the result.\n\nIt should remove all values from list a, which are present in list b.\n\n```\narray_diff([1,2],[1]) == [2]\n```\n\nIf a value is present in b, all of its occurrences must be removed from the other:\n\n```\narray_diff([1,2,2,2,3],[2]) == [1,3]\n```\n\nmy answer\n\n```\nconst array_diff = (a, b) => a.filter(x => b.indexOf(x) === -1 );\n```\n\nbest practice\n\n```\nfunction array_diff(a, b) {\n  return a.filter(e => !b.includes(e));\n}\n```","publishDate":"2018-06-02T00:00+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"2FdrX2hEJyUOCeGqs806Uk","type":"Entry","createdAt":"2018-07-16T10:43:05.936Z","updatedAt":"2018-07-24T08:47:11.378Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":6,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트로 합병정렬 구현 (merge sort in javascript)","slug":"merge-sort-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"합병정렬(merge sort)는 평균 시간복잡도 __*O*(nlogn)__의 비교 기반 정렬 알고리즘이다.\n대표적인 divide and conquer (분할정복) 알고리즘을 활용하여 구현하는 정렬 알고리즘 중 하나다.\n합병정렬은 정렬 알고리즘 중 효율적인 정렬 알고리즘에 속한다.","body":"### Merge Sort?\n합병정렬(merge sort)는 평균 시간복잡도 *O*(nlogn)의 비교 기반 정렬 알고리즘입니다.\n대표적인 divide and conquer (분할정복) 알고리즘을 활용하여 구현하는 정렬 알고리즘 중 하나입니다. (Safari, Firefox의 Array.prototype.sort가 merge sort 알고리즘으로 구현되어 있습니다.) 좋은 성능을 가지고 있고, 구현하기 쉽고 이해하기도 쉬운 장점을 가진 정렬 알고리즘입니다.\n\n합병정렬은 어떻게 동작할까요? 합병정렬은 하나의 정렬되지 않은 배열을 정렬하는 것보다 두 개의 정렬된 배열을 정렬하는 것이 더 효율적이다라는 아이디어로 시작합니다. 두 개의 정렬된 배열이 있다면, 하나씩 요소를 비교하고, 작은 값을 결과 배열에 하나씩 추가하기 시작합니다.\nA와 B의 배열이 있다고 생각해 봅시다. A[0]와 B[0]의 요소를 비교합니다. A[0] 요소가 더 작다면 A[0] 요소를 결과 배열에 넣습니다. A[1]과 B[0]를 비교합니다. B[0]가 더 작다면 B[0]를 결과 배열에 넣습니다. A[1]과 B[1]을 비교합니다. 이렇게 비교가 끝나면 결과 배열은 A와 B 배열의 비교 값에 대해서 정렬된 상태가 될 것입니다. (A배열과 B배열은 정렬된 상태라 추가적으로 정렬할 필요가 없다)\n\n### 시간복잡도\n- 최악 시간복잡도: *O(nlogn)*\n- 평균 시간복잡도: *O(nlogn)*\n- 최선 시간복잡도: *O(nlogn)*\n\n\n### 구현 방법\n구현 방법은 크게 3가지로 구성되어 있습니다.\n1. 정렬되지 않은 하나의 배열을 단일 요소를 가진 배열이 될 때 까지 나눈다. (Divide)\n2. 단일 요소를 가진 배열을 합친다. (conquer)\n3. 과정을 작은 문제로 구성하고 재귀적으로 해결한다.\n\n### 간단한 예시\n\n```\n[7, 1, 5, 2]\n[7, 1] | [5, 2]\n[7] | [1] [5] | [2]\n[1, 7] | [2, 5]\n[1, 2, 5, 7]\n```\n\n### 자바스크립트로 구현\n\n```\n// 배열을 반으로 나누고, 재귀적으로 병합한다.\nfunction mergeSort(arr) {\n  // 재귀함수 탈출조건 단일 요소로 구성된 배열이라면, 리턴\n  if (arr.length === 1) {\n    return arr;\n  }\n  \n  const middle = Math.floor(arr.length / 2); // 배열의 중간 값\n  const left = arr.slice(0, middle); // left side items\n  const right = arr.slice(middle); // right side items\n\n  return merge(mergeSort(left), mergeSort(right));\n}\n\n// 배열을 비교하고, 연결된 결과를 리턴한다.\nfunction merge(left, right) {\n  let result = [];\n  let leftIndex = 0;\n  let rightIndex = 0;\n\n  // left items와 right items 비교\n  while(leftIndex < left.length && rightIndex < right.length) {\n    if (left[leftIndex] < right[rightIndex]) {\n      result.push(left[leftIndex]);\n      leftIndex++;\n    } else {\n      result.push(right[rightIndex]);\n      rightIndex++;\n    }\n  }\n\n  return [...result, ...left.slice(leftIndex), ...right.slice(rightIndex)];\n}\n\nconst list = [2, 5, 1, 3, 7, 2, 3, 8, 6, 3];\nconsole.log(mergeSort(list)); // [ 1, 2, 2, 3, 3, 3, 5, 6, 7, 8 ]\n```","publishDate":"2018-07-16T19:42+09:00","tags":["javascript","algorithm"],"categories":["javascript"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6R3TVQaMVOsS6YAsWQMmqw","type":"Entry","createdAt":"2018-07-22T07:58:20.573Z","updatedAt":"2018-07-24T08:47:28.351Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트로 구현한 탐욕 알고리즘 (greedy algorithm in javascript)","slug":"greedy-algorithm-in-javascript","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"탐욕 알고리즘이란 매 순간마다 최적의 해를 구해내는 알고리즘입니다. 하지만, 해당 순간에는 최적일지 몰라도 전체적인 측면으로 봤을 때 도출된 해가 최적의 조건이라고는 보장할 수 없다.","body":"## 탐욕 알고리즘이란?\n탐욕 알고리즘이란 매 선택의 순간에 그 순간에서의 가장 최적의 해를 도출해내는 알고리즘입니다. 한가지 예시로 거스름 돈 교환을 들 수 있는데 만약 10, 7, 5, 1로 구성되어 있는 동전들로 14를 교환해준다고 했을 때, 탐욕 알고리즘을 사용하면 10 - 1개 1 - 4개로 구성될 것이다. 왜냐하면 탐욕 알고리즘은 해당 순간에 가장 최선의 해를 내는 알고리즘이기 때문이다. 하지만, 전체적으로 봤을 때 최선의 해라고 볼 수 없다. 왜냐하면 7 - 2개로 구성하는 것이 가장 최선의 해답이기 때문이다. \n예시를 보면 알 수 있듯이 매 순간 최선의 선택을 했다고해서 종합적으로 봤을 때에 최선의 선택이라고는 볼 수 없다.\n\n## 간단한 자바스크립트 예시\n```\n// greedy algorithm (거스름 돈 문제)\n// 10000 5000 1000 500 100 50 10\nfunction getChange(value) {\n  let changes = [10000, 5000, 1000, 500, 100, 50, 10];\n  let won = Math.floor(value / 10) * 10; // 1의 자리 원화 반내림\n  let i = 0;\n  let counts = [];\n\n  while (true) {\n    if (won >= changes[i]) {\n      let count = Math.floor(won / changes[i]);\n      won = won - changes[i] * count;\n      counts[i] = count;\n    } else {\n      counts[i] = 0;\n    }\n\n    i++;\n    if (won === 0) {\n      for (let j = 0; j < changes.length - i; j++) {\n        counts.push(0);\n      }\n      break;\n    }\n  }\n\n  changes.map((change, index) => {\n    console.log(`${change.toLocaleString()}원 ${counts[index]}개`);\n  });\n}\n\ngetChange(32660);\n/*\n10,000원 3개\n5,000원 0개\n1,000원 2개\n500원 1개\n100원 1개\n50원 1개\n10원 1개\n*/\ngetChange(1000);\n/*\n10,000원 0개\n5,000원 0개\n1,000원 1개\n500원 0개\n100원 0개\n50원 0개\n10원 0개\n*/\ngetChange(1500);\n/*\n10,000원 0개\n5,000원 0개\n1,000원 1개\n500원 1개\n100원 0개\n50원 0개\n10원 0개\n*/\ngetChange(10100);\n/*\n10,000원 1개\n5,000원 0개\n1,000원 0개\n500원 0개\n100원 1개\n50원 0개\n10원 0개\n*/\ngetChange(1500000);\n/*\n10,000원 150개\n5,000원 0개\n1,000원 0개\n500원 0개\n100원 0개\n50원 0개\n10원 0개\n*/\ngetChange(9999);\n/*\n10,000원 0개\n5,000원 1개\n1,000원 4개\n500원 1개\n100원 4개\n50원 1개\n10원 4개\n*/\n```","publishDate":"2018-07-22T17:58+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"28HVoJ37nWYKkIAuGuiKqW","type":"Entry","createdAt":"2018-06-03T13:45:04.829Z","updatedAt":"2018-07-24T08:49:45.038Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"[codewars] Find The Parity Outlier","slug":"codewars-find-the-parity-outlier","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"You are given an array (which will have a length of at least 3, but could be very large) containing integers.","body":"You are given an array (which will have a length of at least 3, but could be very large) containing integers. The array is either entirely comprised of odd integers or entirely comprised of even integers except for a single integer N. Write a method that takes the array as an argument and returns this \"outlier\" N.\n\n###Examples\n```\n[2, 4, 0, 100, 4, 11, 2602, 36]\nShould return: 11 (the only odd number)\n\n[160, 3, 1719, 19, 11, 13, -21]\nShould return: 160 (the only even number)\n```\n\n###My Answer\n```\nfunction findOutlier(integers){\n  let odd = integers.filter(i => i % 2 !== 0);\n  let even = integers.filter(i => i % 2 === 0);\n  \n  return odd.length > even.length ? even[0] : odd[0];\n}\n```\n\n###Best Practice\n```\nfunction findOutlier(int){\n  var even = int.filter(a=>a%2==0);\n  var odd = int.filter(a=>a%2!==0);\n  return even.length==1? even[0] : odd[0];\n}\n```","publishDate":"2018-06-03T10:44+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"PU9aLuiQKsqm0WgqQyAm0","type":"Entry","createdAt":"2018-06-03T13:27:11.411Z","updatedAt":"2018-07-24T08:49:55.046Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"Equal Sides Of An Array","slug":"equal-sides-of-an-array","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"6hBUhX5xKgUs0WAGGQOK8k","type":"Asset","createdAt":"2018-05-26T04:41:15.300Z","updatedAt":"2018-07-15T06:22:03.319Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"codewars","file":{"url":"//images.ctfassets.net/hu4faubeotg0/6hBUhX5xKgUs0WAGGQOK8k/6ff771ee911a4bb5fb9b633d17907e1b/algorithm-math-seo-fade-ss-1920.jpg","details":{"size":384934,"image":{"width":1920,"height":1080}},"fileName":"algorithm-math-seo-fade-ss-1920.jpg","contentType":"image/jpeg"}}},"description":"You are going to be given an array of integers.","body":"You are going to be given an array of integers. Your job is to take that array and find an index N where the sum of the integers to the left of N is equal to the sum of the integers to the right of N. If there is no index that would make this happen, return -1.\n\n###For example:\n\n####Let's say you are given the array [1,2,3,4,3,2,1]:\nYour function will return the index 3, because at the 3rd position of the array, the sum of left side of the index ([1,2,3]) and the sum of the right side of the index ([3,2,1]) both equal 6.\n\n####Let's look at another one.\nYou are given the array [1,100,50,-51,1,1]:\nYour function will return the index 1, because at the 1st position of the array, the sum of left side of the index ([1]) and the sum of the right side of the index ([50,-51,1,1]) both equal 1.\n\n####Last one:\nYou are given the array [20,10,-80,10,10,15,35]\nAt index 0 the left side is []\nThe right side is [10,-80,10,10,15,35]\nThey both are equal to 0 when added. (Empty arrays are equal to 0 in this problem)\nIndex 0 is the place where the left side and right side are equal.\n\n<b>Note</b>: Please remember that in most programming/scripting languages the index of an array starts at 0.\n\n####Input:\nAn integer array of length 0 < arr < 1000. The numbers in the array can be any integer positive or negative.\n\n####Output:\nThe lowest index N where the side to the left of N is equal to the side to the right of N. If you do not find an index that fits these rules, then you will return -1.\n\n<b>Note</b>:\nIf you are given an array with multiple answers, return the lowest correct index.\nAn empty array should be treated like a 0 in this problem.\n\nMy Answer\n```\nfunction findEvenIndex(arr) {\n  let result = -1;\n  for (let i = 1; i < arr.length; i++) {\n    const left = arr.slice(0, i).reduce((curr, next) => curr + next, 0);\n    const right = arr.slice(i+1).reduce((curr, next) => curr + next, 0);\n    \n    if (left === right) {\n      result = i;\n    }\n  }\n  \n  return result;\n}\n```\n\nBest Practice\n```\nfunction findEvenIndex(arr)\n{\n  for(var i=1; i<arr.length-1; i++) {\n    if(arr.slice(0, i).reduce((a, b) =>  a+b) === arr.slice(i+1).reduce((a, b) =>  a+b)) {\n      return i;\n    }\n  }\n  return -1;\n}\n```\n\n반복문 안에서 조건문에 return처리를 해버리면 훨씬 깔끔했을텐데 멍청하게 그걸 이용 안하고 쓸모없는 result 변수에 할당하고, 마지막에 return하는 형식으로 구현해버렸다. \n쓸데없이 변수에 할당하는 습관을 줄여야지..","publishDate":"2018-06-03T10:26+09:00","tags":["javascript","algorithm"],"categories":["algorithm"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"3UFXQNhQIoI0AO2gAWysCK","type":"Entry","createdAt":"2018-07-15T11:00:15.154Z","updatedAt":"2018-07-24T08:48:23.396Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"Nuxt.js x Contentful x Netlify로 static blog 개발하기 2강","slug":"nuxt-js-x-contentful-x-netlify-static-blog-2","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"n7KuY2Fl7wcwW0E0eQoCe","type":"Asset","createdAt":"2018-07-15T04:08:42.256Z","updatedAt":"2018-07-15T06:35:37.006Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"nuxt-background","file":{"url":"//images.ctfassets.net/hu4faubeotg0/n7KuY2Fl7wcwW0E0eQoCe/de299f9e8aa46099b568aa08cd90ef03/nuxt-img.png","details":{"size":181398,"image":{"width":1600,"height":900}},"fileName":"nuxt-img.png","contentType":"image/png"}}},"description":"Nuxt.js, Contentful, Netlify로 static blog를 개발해보는 강의입니다. \nnuxt.js는 기존의 vue 웹 애플리케이션에서 ssr을 다루는 프레임워크입니다.\nContentful은 컨텐츠 관리를 도와주는 CMS 툴입니다.\nnetlify란 애플리케이션을 배포하고 자동화하기 위한 플랫폼입니다.\n\n위 도구들을 활용해서 매우 빠르고, 관리하기 쉬운 블로그 웹 애플리케이션을 개발해보겠습니다.","body":"이번 포스팅에서는 Nuxt.js 프로젝트에 Contentful API를 연결하는 방법을 알려드리도록 하겠습니다.\n\n### Nuxt 프로젝트에 Contentful 패키지 설치\n\n프로젝트에 Contentful 패키지를 설치합니다.\n\n```\nnpm install --save contentful @nuxtjs/dotenv\n\nor\n\nyarn add contentful @nuxtjs/dotenv\n```\n\nNuxt 프로젝트 plugins 폴더에 contentful.js를 추가합니다.\n\n```\n// plugins/contentful.js\n\nconst contentful = require(\"contentful\"); // 방금 전에 설치한 contentful 패키지를 불러옵니다.\n\n// contentful의 createClient 메소드를 통해 클라이언트 설정\nconst client = contentful.createClient({\n  space: process.env.CTF_SPACE_ID,\n  accessToken: process.env.CTF_ACCESS_TOKEN\n});\n\nmodule.exports = client;\n\n```\n\n프로젝트 루트 디렉토리에 .env 파일을 만들고 contentful 환경변수를 추가합니다.\ncontentful에서 부여받은 space id와 access token을 추가합니다.\n```\nCTF_SPACE_ID=space 아이디\nCTF_ACCESS_TOKEN= contentful access token\n```\n\n### Space_id 확인하는 방법\n![스크린샷 2018-07-16 오후 8.02.24](//images.ctfassets.net/hu4faubeotg0/4gqDtaqk3egwuGc8KoEmQK/3b2f6945bbc9a9bdad57433cc6664c7e/_______________________________2018-07-16______________8.02.24.png)\n\ncontentful 웹사이트에 Setting탭에 General settings에 들어가면, space id를 확인할 수 있습니다.\n\n### Access_token 받는 방법\n\ncontentful 웹사이트에서 Setting탭의 Apikeys 항목을 클릭합니다.\n\n![스크린샷 2018-07-16 오후 8.05.58](//images.ctfassets.net/hu4faubeotg0/4sNXeECqrKusS6UoumO02K/2cdfa717e35bb7c580fc338b6f8a1175/_______________________________2018-07-16______________8.05.58.png)\n\n우측의 add api key 버튼을 클릭합니다.\n\napi key가 생성되었다면, access token 목록 중에 Content Delivery API - access token의 api key가 있을 것입니다. api키를 복사해주고, 우측 상단에 저장버튼을 눌러서 저장합니다.\n\n다시 .env 파일로 돌아가서 발급받은 space_id와 access_token을 환경변수에 세팅해줍니다.\n\n```\nCTF_SPACE_ID=hello_space\nCTF_ACCESS_TOKEN=513d89115ec444d03dqwed0e19bdb0a836862be5e9dcd09alqwe3cf0c320d\n```\n\n.env 설정이 완료되었다면, nuxt.config.js 파일을 수정합니다.\n```\n// nuxt.config.js\nrequire(\"dotenv\").config(); // 파일 최상단에 dotenv 패키지를 불러온다.\n\nmodule.exports = {\n  ...\n  plugins: [\"~/plugins/contentful\"],\n  modules: [@nuxtjs/dotenv]\n}\n```\n\n### Contentful 데이터 가져오기\n자 이제 vue 컴포넌트에 저희가 가지고 있는 포스팅 데이터를 가져오도록 하겠습니다.\n코드는 async/await 방식으로 비동기 데이터를 처리했습니다.\n\n```\n// pages/index.vue\n\n<script>\nimport client from '~/plugins/contentful';\nexport default {\n  async asyncData() {\n    let { items } = await client.getEntries({\n      content_type: 'post',\n      order: '-sys.createdAt'\n    });\n    \n    console.log(items);\n    return {\n      items\n    }\n  }\n}\n</script>\n```\n\n__yarn dev or npm run dev__로 프로젝트를 실행하고 localhost:3000으로 접속하면, 터미널에 아래와 같이 데이터가 정상적으로 파싱된 것을 확인할 수 있습니다.\n\n![스크린샷 2018-07-16 오후 11.06.35](//images.ctfassets.net/hu4faubeotg0/2QMWH9afO0GQ4I0qsGAQwi/b2a913a637313eb3bd084281ce8618d7/_______________________________2018-07-16______________11.06.35.png)\n\nvue single file component에 대한 이해가 없다면, 아래의 링크를 참고해주세요.\n[https://kr.vuejs.org/v2/guide/single-file-components.html](https://kr.vuejs.org/v2/guide/single-file-components.html)\n\n그럼 이제 파싱한 데이터를 화면에 그려보겠습니다.\n\n```\n<template>\n  <section>\n    <h1>POST</h1>\n    <div>\n      <h2 v-for=\"(item, index) in items\" :key=\"index\">\n        {{ item.fields.title }}\n      </h2>\n    </div>       \n  </section>\n</template>\n```\n\n![screencapture-localhost-3000-2018-07-16-23 10 17](//images.ctfassets.net/hu4faubeotg0/5Bbgn3Du6cE0E6c0OKAIMM/b8019691df58651b8f007c362aa232ea/screencapture-localhost-3000-2018-07-16-23_10_17.png)\n\nv-for=\"(item, index) in items\"\n\nv-for 디렉티브를 모르실 수 있으니 간단히 설명하고 넘어가겠습니다. 요전에 asyncData에서 return한 items를 배열을 기반으로 리스트를 렌더링할 수 있습니다. item in items는 vue에서 리스트를 순회하기 위한 특별한 문법입니다. items는 원본 데이터 배열이고 item은 반복되는 배열 요소의 별칭입니다.\n\n```\n<template>\n  <section>\n    <h1>POST</h1>\n    <div>\n      <h2 v-for=\"(item, index) in items\" :key=\"index\">\n        <nuxt-link :to=\"`/blog/${item.fields.slug}`\">{{ item.fields.title }}</nuxt-link>\n      </h2>\n    </div>       \n  </section>\n</template>\n  \n<script>\nimport client from '~/plugins/contentful'\nexport default {\n  async asyncData() {\n    let { items } = await client.getEntries({\n      content_type: 'post2',\n      order: '-sys.createdAt'\n    });\n    \n    return {\n      items\n    }\n  },\n  head: {\n    title: \"Latest Posts\"\n  }\n}\n</script>\n```\n\n포스트들의 리스트를 보여주는 페이지를 완성했으니 포스트를 보여주는 페이지를 만들어 보겠습니다.\nnuxt에서는 pages 폴더를 기준으로 라우팅을 설정합니다. 그래서 pages의 index.vue가 '/' 위치로 자동으로 라우팅을 설정한 것입니다. pages/blog/index.vue는 '/blog'로 라우팅되죠. 그럼 해당 포스팅을 보여주는 라우팅을 처리하기 위해서는 dynamic route를 설정해야되는데요. nuxt에서 _slug.vue처럼 파일 이름 앞에 _(언더바)를 추가하면, 해당 slug 이름에 따라서 다이나믹하게 라우트처리를 할 수 있습니다.\n\npages폴더 안에 blog폴더를 만들고 _slug.vue를 생성합니다.\n\n![스크린샷 2018-07-16 오후 11.34.23](//images.ctfassets.net/hu4faubeotg0/5zRAD6uq9aG6eYw2aaws8i/2b83b47e9b05d518466bc099885755ac/_______________________________2018-07-16______________11.34.23.png)\n\n\n```\n<script>\n// pages/blog/_slug.vue\n\nimport client from '~/plugins/contentful'\nexport default {\n  async asyncData({ params }) {\n    let { items } = await client.getEntries({\n      content_type: 'post2',\n      'fields.slug': params.slug\n    });\n    \n    return {\n      post: items[0]\n    }\n  },\n  head() {\n    return {\n      title: this.post.fields.title  \n    }\n  }    \n}\n</script>\n```\nasyncData의 params변수를 통해서 slug 키워드를 가져올 수 있는데 getEntries에 slug 키워드를 추가하면 해당 slug의 데이터만 파싱해서 가져올 수 있습니다.\n\nhttp://localhost:3000/blog/{slug}\n예시 : http://localhost:3000/blog/contentful-test\n![스크린샷 2018-07-16 오후 11.39.57](//images.ctfassets.net/hu4faubeotg0/wZfeuRohYym24wWs40cmO/88e81d778541697b35c663d4f040517b/_______________________________2018-07-16______________11.39.57.png)\n\n```\n<template>\n  <div>\n    <h2>{{ post.fields.title }}</h2>\n    <p>{{ post.fields.content }}</p>\n  </div>\n</template>\n  \n<script>\nimport client from '~/plugins/contentful'\nexport default {\n  async asyncData({ params }) {\n    let { items } = await client.getEntries({\n      content_type: 'post2',\n      'fields.slug': params.slug\n    });\n    console.log(items[0]);\n    return {\n      post: items[0]\n    }\n  },\n  head() {\n    return {\n      title: this.post.fields.title  \n    }\n  }    \n}\n</script>\n\n```\n\n아래처럼 화면에 포스트 글과 컨텐츠가 노출되면 정상적으로 데이터가 화면에 정상적으로 렌더링된 것입니다.\n\n![스크린샷 2018-07-16 오후 11.43.13](//images.ctfassets.net/hu4faubeotg0/2M9o1u4Apis8cOoceioiAs/a6407b1bc5560948bb3cef5fc3b0d475/_______________________________2018-07-16______________11.43.13.png)\n\n이번 포스팅에서는 contentful API를 nuxt 프로젝트에 연결하고 데이터를 화면에 렌더링까지 해봤습니다. 간단하게 데이터를 어떻게 연결하고, 비동기로 받은 데이터를 vue component에서 어떻게 처리하는지에 대해서 이해하시면 됩니다.\n설명이 다소 어렵거나 이해가 되지 않는 부분이 있다면 댓글로 질문해주세요! + 틀린 부분도 있을 수 있습니다. 지적해주시면 수정하겠습니다!\n\n다음 포스팅에서는 Netlify를 활용해서 서버에 배포하는 방법을 알려드리겠습니다.","publishDate":"2018-07-15T20:00+09:00","tags":["javascript","vue","frontend"],"categories":["vue"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"36ScCfepSwQoyYIWsw6Yqm","type":"Entry","createdAt":"2018-05-29T03:16:37.455Z","updatedAt":"2018-07-24T08:51:20.088Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":5,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"inline vs block vs inline-block 차이점 알아보기","slug":"inline-vs-block-vs-inline-block","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"4SRJK3JXBCsWWAC44I084O","type":"Asset","createdAt":"2018-05-26T04:31:56.317Z","updatedAt":"2018-07-15T08:12:03.279Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":2,"locale":"en-US"},"fields":{"title":"html5","file":{"url":"//images.ctfassets.net/hu4faubeotg0/4SRJK3JXBCsWWAC44I084O/17eee005ac20bfccde544d24700f3343/wallpaperjam.com-91463.jpg","details":{"size":355719,"image":{"width":2048,"height":1200}},"fileName":"wallpaperjam.com-91463.jpg","contentType":"image/jpeg"}}},"description":"inline vs block vs inline-block 차이점 알아보기","body":"## inline vs block vs inline-block 속성을 비교해보자.\n\n### display: inline ?\n대표적인 태그로는 span을 예로 들 수 있는데, text 크기만큼만 공간을 점유하고 줄바꿈을 하지 않는다.\n- width/height 적용불가\n- margin/padding-top/bottom 적용불가\n- line-height를 원하는대로 사용할 수 없다.\n\n### display: block ?\nblock 속성은 무조건 한줄을 점유하고 있고, 다음 태그는 무조건 줄바꿈이 적용된다. 대표적인 태그는 div가 있다.\n\n### display: inline-block ?\ninline-block 속성은 inline 속성의 특징과 block 속성의 특징 둘 다 가지고 있는 속성이다. 기본적인 특징은 inline 속성과 비슷한데 (줄바꿈을 하지 않고, 동일한 라인에 작성가능) inline속성에서 할 수 없었던 width/height 변경 및 line-height를 커스텀하게 적용할 수 있는 특징이 있다.\n- width/height 적용 가능 \n- margin/padding-top/bottom 적용 가능\n- line-height 적용 가능\n\n** 고려사항\n- inline-block 사이에 공백이 생기게 되는데, parent 태그에 font-size: 0를 적용하면 해결된다.\n- inline-block 끼리 높이가 안맞을 때 상위 공백이 생기게 되는데 vertical-align: top을 적용하면 해결할 수 있다.","publishDate":"2018-05-29T12:16+09:00","tags":["html","frontend"],"categories":["html5"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"4qnduaJ8oEASSEM0oMWIEM","type":"Entry","createdAt":"2018-05-27T14:06:19.971Z","updatedAt":"2018-07-24T08:51:39.167Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":9,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트 호이스팅","slug":"javascript-hoisting","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"3SGn7CBi9aE62YIekmOyOk","type":"Asset","createdAt":"2018-05-27T14:04:57.069Z","updatedAt":"2018-05-27T14:04:57.069Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"locale":"en-US"},"fields":{"title":"javascript","description":"javascript","file":{"url":"//images.ctfassets.net/hu4faubeotg0/3SGn7CBi9aE62YIekmOyOk/9f7dc4e86d70ede94f2c88b47724dabf/javascript.png","details":{"size":11875,"image":{"width":785,"height":340}},"fileName":"javascript.png","contentType":"image/png"}}},"description":"자바스크립트 호이스팅에 대해서 알아보는 포스팅","body":"자바스크립트를 공부하는 사람들은 호이스팅이라는 용어를 접해본 경험이 있을 것이다. \n정의를 내려보기 전에, 아래의 예제를 한번 살펴보도록 하자.\n\n```\nfunction greeting() {\n  console.log('hello');\n}\n\ngreeting();\n```\ngreeting 함수를 호출 할 때, 예상대로 hello 문자열이 console에 기록이 될 것이다.\n\n하지만 함수를 선언하기 전에 실행하면 어떻게 될까?\n\n```\ngreeting();\n\nfunction greeting() {\n  console.log('hello');\n}\n```\n위 예시는 신기하게도 처음 예시와 동일하게 hello 문자열을 콘솔창에 기록한다.\n\n이것이 바로 호이스팅이 동작하는 방식이다.\n\n대부분 이 호이스팅 동작 방식을 설명할 때, 선언한 변수와 함수를 실행 컨텍스트 최상단으로 끌어올린다고 설명한다. 이 말도 맞는 말이지만, 코드 단계에서는 어떠한 이동도 발견되지 않는다. \n가장 중요한 점은 함수와 변수 선언부는 컴파일 단계에서 메모리에 추가된다는 점이다.\n\n위 예제들의 함수 선언 구문은 컴파일 단계에서 메모리에 추가됐으므로 실행 컨텍스트 내에서 이 함수 선언 구문에 접근하고 실행할 수 있는 것이다.\n\n일반적으로 우리는 변수를 선언하고 초기화한 다음 변수를 사용하려고 할 것이다.\n\n```\nvar a = 3;\nconsole.log(a);\n\n// 3\n```\n\n하지만, 아래와 같이 변수를 선언하면 어떻게 될까?\n\n```\na = 3;\nconsole.log(a);\nvar a;\n\n// 3\n```\n\n아래의 예시는?\n\n```\nconsole.log(a);\nvar a = 3;\n// undefined\n```\n3을 예상했겠지만, undefined가 출력됐다.\n\n왜 이런 현상이 발생했을까..?\n그 이유는 자바스크립트는 오직 선언문만 끌어올린다(호이스팅한다). 초기화는 호이스팅되지 않는다.\n\n우리가 만약 선언과 초기화를 동시에 한다면, var a = 3;에서 var a;만 상단으로 호이스팅된다.\n\n자바스크립트에서 변수는 선언만하고 초기화를 하지 않는다면, 자동으로 undefined를 할당한다.\n\n아래의 예제는 똑같이 undefined를 출력한다. (선언문만 호이스팅하고, 초기화는 호이스팅되지 않는다.)\n```\nconsole.log(c);\nvar c = 3;\n// undefined\n\nvar d;\nconsole.log(d);\nd = 3;\n// undefined\n```\n## Best Practice\n이러한 자바스크립트의 특성때문에, 변수들은 실행컨텍스트 최상단에 선언하는 것이 바람직한 방법이다. 이러한 방법은 의도치않은 동작을 막을 수 있는 좋은 습관이다.\n(실행컨텍스트 최상단에 변수 선언과 초기화를 같이 해주는 것이 가장 깔끔한 방법이라고 생각한다. 코드가 직관적이고, 의도를 파악하기 쉽기 때문 + 의도치않은 동작까지 막을 수 있음)","publishDate":"2018-05-27T11:05+09:00","tags":["javascript","frontend"],"categories":["javascript"]}},{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"xrRCIQ6WY0eOm26QqAAiU","type":"Entry","createdAt":"2018-06-03T15:47:02.358Z","updatedAt":"2018-07-24T08:49:20.882Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":3,"contentType":{"sys":{"type":"Link","linkType":"ContentType","id":"blogPost"}},"locale":"en-US"},"fields":{"title":"자바스크립트 동등연산자(==)와 일치연산자(===) 차이","slug":"what-is-the-difference -between-equality-and-identity","heroImage":{"sys":{"space":{"sys":{"type":"Link","linkType":"Space","id":"hu4faubeotg0"}},"id":"3SGn7CBi9aE62YIekmOyOk","type":"Asset","createdAt":"2018-05-27T14:04:57.069Z","updatedAt":"2018-05-27T14:04:57.069Z","environment":{"sys":{"id":"master","type":"Link","linkType":"Environment"}},"revision":1,"locale":"en-US"},"fields":{"title":"javascript","description":"javascript","file":{"url":"//images.ctfassets.net/hu4faubeotg0/3SGn7CBi9aE62YIekmOyOk/9f7dc4e86d70ede94f2c88b47724dabf/javascript.png","details":{"size":11875,"image":{"width":785,"height":340}},"fileName":"javascript.png","contentType":"image/png"}}},"description":"자바스크립트 동등연산자와 일치연산자의 차이를 알아보자","body":"자바스크립트에는 추상적 같음 비교(이중 등호, 동등 연산자)와 엄격한 같음 비교(삼중 등호, 일치 연산자)가 있다.\n\n가장 큰 차이점은 이중 등호는 두 값을 비교할 때 자동으로 형변환하여 같음을 비교하지만, 삼중 등호는 형변환을 수행하지 않고 비교한다.\n\n이중 등호 연산자의 예시를 보자.\n```\n0 == false //true\n\"\" == false //true\n\"\" == 0 //true\n\"0\" == 0 //true\n[1,2] == \"1,2\" //true\nnew String('hello') == 'hello' //true\nnull == undefined //true\n```\n이중 등호 연산자는 자동으로 형변환을 하고 비교하므로 위 예시는 모두 true를 return한다.\n하지만, 삼중 등호 연산자일 경우에 위 예시들은 모두 타입이 다르기 때문에 모두 false를 return할 것이다.\n\n값을 비교할 때 삼중 등호 연산자를 사용하는 것을 습관화하는 것이 혹시 모를 예상치 못한 상황을 막을 수 있는 좋은 방법인 것 같다.","publishDate":"2018-06-04T00:26+09:00","tags":["javascript","frontend"],"categories":["javascript"]}}]}